<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <%- include("../utils/header.ejs") %>
    <title>Document</title>
</head>
<style>
    body{
        overflow: hidden;;
    }
    #table-info{
        width: 100vw;
        height: 85vh;
        overflow: auto;
    }
    #table-info th, #table-info td{
        min-width: 20em;
    }
    th:not:first-child, td{
        min-width: 25em;
        font-size: smaller;
    }

    th, td{
        /* min-width: 20em;
        min-height: 10em; */
        padding: 0px !important;
    }
    .checkbox{
        min-width: 1em;
    }
    input[type="checkbox"]{
        cursor: pointer;
        width: 1.5em;
        height: 1.5em;
    }
    .label{
        font-weight: bolder;
        font-size: x-small;
    }
    #table-create tbody td{
       padding: 0.6em;
    }
    #table-update tbody td{
        padding: 0.6em;
    }
    .error-message{
        color: red;
    }
    select{
        width: 165px;
    }
</style>
<body>
    <%- include("../layout/navbar.ejs")%>
    <div id="table-info">
        <table class="table table-bordered table-hover" id="data-table">
            <thead class="thead-dark table-hover" style="position: block;">
                <th id="thead-stt" style="min-width: 3em;">STT</th>
                <th id="thead-bill" style="min-width: 8em;">BILL</th>
                <th id="thead-container-number" style="min-width: 8em;">CONT NUMBER</th>
                <th id="thead-cont-category" style="min-width: 6em;">CONT TYPE</th>
                <th id="thead-direct-carrier" style="min-width: 10em;">DIRECT CARRIER</th>
                <th id="thead-invoice" style="min-width: 10em;">INVOICE</th>
                <th id="thead-vendor-cargo-ready-date" style="min-width: 11em;">CARGO READY DATE</th>
                <th id="thead-booking-date" style="min-width: 11em;">ETD</th>
                <th id="thead-ata-vn-port" style="min-width: 11em;">ETA VN PORT</th>
                <th id="thead-picked-at-port" style="min-width: 8em;">VN PORT</th>
                <th id="thead-ata-pb" style="min-width: 11em;">ETA PHU BAI</th>
                <th id="thead-vendor" style="min-width: 13em;">VENDOR</th>
                <th id="thead-po" style="min-width: 13em;">PO</th>
                <th id="thead-note">NOTE</th>
                <th id="thead-status" style="min-width: 3em;">STATUS</th>
            </thead>
            <tbody>
                <%var i=0%>
                <% for(let data of listData){ %>
                    <tr class="tr stt-<%=++i%>" id="<%=data['idSystem']%>" ondblclick="updateDataRow(this)">
                        <td class="tbody-stt" style="min-width: 3em;"><%=i%></td>

                        <td class="tbody-bill" style="min-width:8em" data-stt="<%=i%>"><%=data["bill"]%></td>

                        <td class="tbody-container-number" style="min-width: 8em;"  data-stt="<%=i%>"><%=data["cont_number"]%></td>

                        <td class="tbody-cont-category" style="min-width: 6em;" data-stt="<%=i%>"><%=data["cont_category"]%></td>
                        
                        <td class="tbody-direct-carrier" style="min-width:10em" data-stt="<%=i%>"><%=data["direct_carrier"]%></td>
                        
                        <td class="tbody-invoice" style="min-width: 10em;" data-stt="<%=i%>"><%=data["invoice"]%></td>

                        <td class="tbody-vendor-cargo-ready-date datetime" style="min-width: 11em;" data-stt="<%=i%>"><%=data["vendor_cargo_ready_date"]%></td>

                        <td class="tbody-booking-date datetime" style="min-width: 11em;" data-stt="<%=i%>"><%=data["booking_date"]%></td>
                        
                        <td class="tbody-ata-vn-port datetime" style="min-width: 11em;" data-stt="<%=i%>"><%=data["ata_vn_port"]%></td>

                        <td class="tbody-picked_at_port" style="min-width: 8em;" data-stt="<%=i%>"><%=data["picked_at_port"]%></td>

                        <td class="tbody-ata-pb datetime" style="min-width: 11em;" data-stt="<%=i%>"><%=data["ata_pb"]%></td>

                        <td class="tbody-vendor"style="min-width: 13em;"  data-stt="<%=i%>"><%=data["vendor"]%></td>

                        <td class="tbody-po"  data-stt="<%=i%>"><%=data["po"]%></td>

                        <td class="tbody-status" style="min-width: 3em;" data-stt="<%=i%>"><%=data["status"]%></td>

                        <td class="tbody-note"  data-stt="<%=i%>"><%=data["note"]%></td>
                    </tr>
                <%}%>
            </tbody>
        </table>
    </div>
    <!-- modal loc  -->
    <form>
        <div class="modal fade" id="exampleModal" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">FILTER</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                    <table>
                        <thead>
                            <th>YEAR</th>
                            <th>WEEK</th>
                        </thead>
                        <tbody>
                            <tr>
                                <td><input type="number" id="input-year" name="year"/></td>
                                <td><input type="number" id="input-week" name="week"/></td>
                            </tr>
                        </tbody>
                      </table>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                  <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
              </div>
            </div>
        </div>
    </form>

    <!-- modal update row -->
    <div class="modal fade" id="updateRow" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">UPDATE ROW</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="display: flex; justify-content: space-between;">
                <table id="table-update">
                    <tbody>
                        <tr>
                            <td class="td-bill">
                                <label class="label">BILL:<span style="opacity: 0;">EEEEEEEEEEEEEEEEEEEEEEEEEE</span></label>
                                <input class="input-bill" placeholder="BILL" type="text">
                                <div class="error-message error-input-bill"></div>
                            </td>

                            <td class="td-container-number">
                                <label class="label">CONTAINER NUMBER:</label>
                                <input class="input-container-number" type="text" placeholder="CONTAINER NUMBER">
                                <div class="error-message error-input-container-number"></div>
                            </td>

                            <td class="td-cont-category">
                                <label class="label">CONT TYPE</label>
                                <input class="input-cont-category" type="text" placeholder="CONT CATEGORY">
                                <div class="error-message error-input-cont-category"></div>
                            </td>

                            <td class="td-direct-carrier">
                                <label class="label">DIRECT CARRIER:</label>
                                <input class="input-direct-carrier" placeholder="DIRECT CARRIER" type="text">
                                <select class="select-direct-carrier"></select>
                                <div class="error-message error-input-direct-carrier"></div>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-invoice">
                                <label class="label">INVOICE:</label>
                                <input class="input-invoice" placeholder="INVOICE" type="text">
                                <div class="error-message error-input-invoice"></div>
                            </td>

                            <td class="vendor-cargo-ready-day">
                                <label class="label">VENDOR CARGO READY DAY:</label>
                                <input class="input-vendor-cargo-ready-day datetime" onmouseenter="addDateTime(this)" placeholder="VENDOR CARGO READY DATE" type="text">
                                <div class="error-message error-input-vendor-cargo-ready-day datetime"></div>
                            </td>

                            <td class="td-booking-date">
                                <label class="label">ETD:<span style="opacity: 0;">EEEEEEEEEEEEEEEEEEEEEEEEEE</span></label>
                                <input class="input-booking-date datetime" onmouseenter="addDateTime(this)" placeholder="ETD" type="text">
                                <div class="error-message error-input-booking-date"></div>
                            </td>

                            <td class="td-ata-vn-port">
                                <label class="label">ETA VN PORT:</label>
                                <input class="input-ata-vn-port datetime" onmouseenter="addDateTime(this)" placeholder="ETA VN PORT" type="text">
                                <div class="error-message error-input-ata-vn-port datetime"></div>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-picked-at-port">
                                <label class="label">VN PORT:</label>
                                <input class="input-picked-at-port" placeholder="PICKED AT PORT" type="text">
                                <select class="select-picked-at-port"></select>
                                <div class="error-message error-input-picked-at-port"></div>
                            </td>

                            <td class="td-ata-pb">
                                <label class="label">ETA PHU BAI:</label>
                                <input class="input-ata-pb datetime" onmouseenter="addDateTime(this)" placeholder="ETA PHU BAI" type="text">
                                <div class="error-message error-input-ata-pb datetime"></div>
                            </td>

                            <td class="td-po">
                                <label class="label">PO:<span style="opacity: 0;">EEEEEEEEEEEEEEEEEEEEEEEEEE</span></label>
                                <input class="input-po" placeholder="PO" type="text">
                                <div class="error-message error-input-po"></div>
                            </td>
                            
                            <td class="td-vendor">
                                <label class="label">VENDOR:</label>
                                <input class="input-vendor" type="text" placeholder="VENDOR">
                                <div class="error-message error-input-vendor"></div>
                            </td>
    
                        </tr>
                        <tr>
                            <td class="td-note">
                                <label class="label">NOTE:<span style="opacity: 0;">EEEEEEEEEEEEEEEEEEEEEEEEEE</span></label>
                                <textarea style="margin-bottom: 10px;" class="input-note" type="text" placeholder="NOTE"></textarea>
                                <div class="error-message error-input-note"></div>
                            </td>
                        </tr>
                        
                        <!-- <tr>
                            <td class="td-po">
                                <label class="label">PO NUMBER:</label>
                                <input style="margin-top: 10px;" class="input-po" placeholder="PO" type="text">
                                <div class="error-message error-input-po"></div>
                            </td>
                        </tr> -->
                        
                        <!-- <tr>
                            <td class="td-picked-at-port-day">
                                <label class="label">PICKED AT PORT DAY:</label>
                                <input class="input-picked-at-port-day datetime" onmouseenter="addDateTime(this)" placeholder="PICKED AT PORT DAY" type="text">
                                <div class="error-message error-input-picked-at-port-day datetime"></div>
                            </td>
                        </tr>
                         -->
                        <!-- <tr>
                            <td class="td-return-at-port-day">
                                <label class="label">RETURN AT PORT DAY:</label>
                                <input class="input-return-at-port-day datetime" onmouseenter="addDateTime(this)" placeholder="RETURN AT PORT DAY" type="text">
                                <div class="error-message error-input-return-at-port-day datetime"></div>
                            </td>
                        </tr> -->
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="updateData()">Save changes</button>
            </div>
            </div>
        </div>
    </div>
    <!-- modal update option -->
    <!-- <div class="modal fade" id="updateOption" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">OPTION MODAL</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body" style="display: flex; justify-content: space-between;">
                <a href="#"><button class="btn btn-danger btn-lg active" role="button" style="font-size: smaller;" aria-pressed="true" onclick="directUpdate()">UPDATE DATA</button></a>
                <a href="#"><button onclick="updateRoleBooking()" class="btn btn-success btn-lg active" role="button" style="font-size: smaller;" aria-pressed="true">UPDATE NO BOOKING</button></a>
            </div>
          </div>
        </div>
    </div> -->

    <div style="display: flex; justify-content: flex-end; gap:1em">
        <!-- <a>
            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#exampleModal">
                <i class="fa-solid fa-gear"></i>
            </button>
        </a> -->

        <!-- <a href="#"><button class="btn btn-success btn-lg active" data-toggle="modal" data-target="#updateOption" role="button" style="font-size: smaller;" aria-pressed="true">UPDATE PLAN</button></a>

        <a href="/create-loading-plan" id="makePlanBtn"><button class="btn btn-primary btn-lg active" role="button" style="font-size: smaller;" aria-pressed="true">MAKE PLAN</button></a> -->
        <!-- <a href="/cost-importer">
            <button class="btn btn-danger" id="">COST</button>
        </a> -->

        <nav aria-label="Page navigation example">
            <ul class="pagination" id="navbar-pagination">
              
            </ul>
        </nav>
    </div>
    
    <div id="idSystem" style="display: none;"></div>
    <button id="updateTrigger" style="display: none;" data-toggle="modal" data-target="#updateRow"></button>

    <script src="../../script/utils.js"></script>

    <script>
        let tableUpdateInput = $("#table-update input")
        for(let i=0; i<tableUpdateInput.length; i++){
            $(tableUpdateInput[i]).attr("placeholder", "")
        }
        //dinh dang lai ngay thang
        let datetime = $(".datetime");
        for(let i=0; i<datetime.length; i++){
            let time = $(datetime[i]).text()
            if(time){
                let date = new Date(time).toISOString().split("T")[0].split("-").reverse().join("/")
                let hour = new Date(time).toISOString().split("T")[1].split(".")[0]

                $(datetime[i]).text(date+ " " +hour);
            }
        }
        // chuyen huong trang update 
        function directUpdate(){
            let urlParams = new URLSearchParams(window.location.search);
            let year = urlParams.get("year") || new Date().getFullYear();
            let week = urlParams.get("week");
            console.log(week)
            window.location.href=`/update-loading-plan?${week?"&week="+week:""}${year?"&year="+year:""}`;
        }
    </script>
    
    <!-- init data vao bang -->
    <script>
        let arrSelectPickAtport = [];
        let arrSelectCarrier = [];
        let urlParams = new URLSearchParams(window.location.search);
        let page = urlParams.get('page') || 1; 
        let limit = urlParams.get('limit') || 16;
        let maxBtn = "hehe";
        let arrBtn = [];
        let listBtn = [];
        $.ajax({
            url: host+`/api/importer/countRow`,
            method: "GET"
            })
            .done(result=>{
                maxBtn = result[0].max;
                console.log("ceail",Math.ceil(maxBtn/countRowPerPage))
                for(let i=1; i<=Math.ceil(maxBtn/countRowPerPage); i++){
                    listBtn.push(i);
                }
                //console.log(devidePaginate(Math.ceil(maxBtn/countRowPerPage)))
                // $("#makePlanBtn").attr("href", `/create-loading-plan?${year?"year="+year:""}&week=${maxBtn}`)
                initData();
            })
            .fail(err=>{
                console.log(err);
        })
        function addDateTime(param){
            $(param).datetimepicker({format:'d/m/Y H:00:00'});
        }
        //call so phan trang tai giao dien
        function initData(){
                let preBtn = `<li class="page-item"><a class="page-link" onclick=pagination("pre") href="#">Previous</a></li>`;
                let nextBtn = `<li class="page-item"><a class="page-link" onclick=pagination("next") href="#">Next</a></li>`;

                let arrNew = devidePaginate(Math.ceil(maxBtn/countRowPerPage));
                
                let firstIndex = arrNew[0][0];
                let lastIndex = arrNew[0][arrNew[0].length-1];
                let pagination = "";
                
                function checkRange(page) { 
                    let range = {};
                    for(let i=0; i<arrNew.length; i++){
                        for(let j=0; j<arrNew[i].length; j++){
                            if(page==arrNew[i][j]){
                                range.lastIndex = arrNew[i][arrNew[i].length-1];
                                range.firstIndex = arrNew[i][0];
                                return range;
                            }
                        }
                    }
                }
                function exportRangePaginate(){
                    for(let i=0; i<arrNew.length; i++){
                        for(let j=0; j<arrNew[i].length; j++){
                            if(page==arrNew[i][j]){
                                return arrNew[i];
                            }
                        }
                    }
                }

                let range = exportRangePaginate();
                console.log("pafdsfsdf", page)
                for(let i=0; i<range.length; i++){
                    pagination += `
                        <li class="page-item ${page==range[i]?"active":""}">
                            <a class="page-link" href="/detail-importer?page=${range[i]}&limit=${limit}">
                                ${range[i]}
                            </a>
                        </li>`;
                }
                // for(let i=0; i<result.length; i++){
                //     arrBtn.push(result[i]["estimated_loading_week"]);
                //     if(!week) week=maxBtn;
                //     let range = checkRange(result[i]["estimated_loading_week"]);
                //     pagination += `
                //         <li class="page-item ${week==result[i]["estimated_loading_week"]?"active":""}">
                //             <a class="page-link" href="/admin?week=${result[i]["estimated_loading_week"]}&year=${year}&maxWeek=${range.firstIndex}&minWeek=${range.lastIndex}">
                //                 ${result[i]["estimated_loading_week"]}
                //             </a>
                //         </li>`;
                // }

                let totalPgination = preBtn + pagination + nextBtn;
            
                $("#navbar-pagination").html(totalPgination)
        }
    </script>

    <!-- handle phan trang -->
    <script>
        arrBtn = devidePaginate(maxBtn);
        // phan trang
        function pagination(status){
            let arr = devidePaginate(Math.ceil(maxBtn/countRowPerPage));
            let max = listBtn[listBtn.length-1];
            console.log("max", max);
            let min = listBtn[0];
            console.log("min", min)

            if(status==='next'){
                if(+page+1 <= max){
                    window.location = `/detail-importer?page=${+page+1}&limit=${+limit}`;
                }
            }
            if(status==='pre'){
                if(+page-1 >= min){
                    window.location = `/detail-importer?page=${+page-1}&limit=${+limit}`;
                }
            }
            
            
        }
        //chia khoang cac tuan
        function devidePaginate(maxBtn){
            let result = [];
            for(let i=1; i<=maxBtn; ){
                let arrDevide = [];
                for(let j=1; j<=countListBtnImporter; j++){
                    if(i<=maxBtn){
                        arrDevide.push(i);
                        i++;
                    }
                }
                result.push(arrDevide);
            }
            return result;
        }
        //
        function handlePagination(status){
            // let listBtn = $("#navbar-pagination li");
            
        }
    </script>
    
    <!-- handle vi tr cac row theo booking -->
    <script>
        // $( "#table-info" ).sortable({
        //     items: '.tr',
        //     dropOnEmpty: false,
        //     start: function (G, ui) {
        //             ui.item.addClass("select");
        //         },
        //     stop: function (G, ui) {
        //         // ui.item.removeClass("select");
        //         // $(this).find("tr").each(function (GFG) {
        //         //     console.log($(this).find("td").eq(2))
        //         //     if (GFG > 0) {
        //         //         $(this).find("td").eq(2).html(GFG);
        //         //     }
        //         // });
        //     }
        // });
        $( "" ).sortable({
            items: '.tr',
            dropOnEmpty: false,
            start: function (G, ui) {
                // ui.item.addClass("select");
                // console.log(ui.item["context"]["cells"])
                // let rank = $(stt[0]).attr("class").split(" ")[1].split("-")[1];
                // console.log(rank)
                let nameBooking = "";
                let listCell = ui.item["context"]["cells"];
                for(let i=0; i<listCell.length; i++){
                    if($(listCell[i]).hasClass("tbody-booking-number")){
                        nameBooking = $(listCell[i]).text();
                        break;
                    }
                }
                
                let listBookingRow = $(".tbody-booking-number");
                let listRow = $(".tr");
                for(let i=0; i<listRow.length; i++){
                    let rowBookingNumber = $(listRow[i]).children();
                    
                    for(let j=0; j<rowBookingNumber.length; j++){
                        if($(rowBookingNumber[j]).hasClass("tbody-booking-number")){
                            let text = $(rowBookingNumber[j]).text();
                            
                            if(text == nameBooking){
                                $(listRow[i]).addClass("target")
                            }else{
                                $(listRow[i]).css("background")
                            }
                        }
                    }
                }

            },
            stop: function (G, ui) {
                let listRow = $(".tr");
                for(let i=0; i<listRow.length; i++){
                    if($(listRow[i]).hasClass("target")){
                        $($(".tr")[i]).removeClass("target")
                    }
                }
                let nameBooking = "";
                let listCell = ui.item["context"]["cells"];
                for(let i=0; i<listCell.length; i++){
                    if($(listCell[i]).hasClass("tbody-booking-number")){
                        nameBooking = $(listCell[i]).text();
                        break;
                    }
                }
                let listBookingRow = $(".tbody-booking-number");
                let a=1;
                for(let i=0; i<listRow.length; i++){
                    let rowBookingNumber = $(listRow[i]).children();

                    for(let j=0; j<rowBookingNumber.length; j++){
                        if($(rowBookingNumber[j]).hasClass("tbody-booking-number")){
                            let text = $(rowBookingNumber[j]).text();
                            if(text == nameBooking){
                                for(let b=0; b<rowBookingNumber.length; b++){
                                    if($(rowBookingNumber[b]).hasClass("tbody-no-booking")){
                                        $(rowBookingNumber[b]).text(a);
                                        a++;
                                    }
                                }
                            }
                        }
                    }

                    for(let q=0; q<rowBookingNumber.length; q++){
                        if($(rowBookingNumber[q]).hasClass("tbody-stt")){
                            $(rowBookingNumber[q]).text(i+1);
                        }
                    }
                }
            }
            });
    </script>
    <!-- handle khi nguoi dung muon thay doi cac o -->
    <script>
        // function handleUpdate(selector){
        //     let number = Math.random();
        //     let classSelector = $(selector).attr("class").split(" ")[0];
        //     $(selector).css("color","white");
        //     let value = $(selector).text();
        //     let input = `<input class="${classSelector}" id="zxc" value="${value}"/>`
            
        //     $(selector).html(input+value);
            
        //     $(selector).mouseleave(()=>{
        //         console.log($(`#zxc`))
        //         $(selector).html($(`#zxc`).val())
        //     })
        // }
    </script>

    <!-- update role booking -->
    <script>
        function updateRoleBooking(){
            let tableRow = $("#table-info tbody tr");
            let listResult = [];
            for(let i=0; i<tableRow.length; i++){
                let obj = {};
                obj.id = $(tableRow[i]).attr("id");
                let chidren = $(tableRow[i]).children();
                for(let j=0; j<chidren.length; j++){
                    if($(chidren[j]).hasClass("tbody-no-booking")){
                        obj.noBooking = $(chidren[j]).text();
                    }
                }
                listResult.push(obj);
            }
            postDataRoleBooking(listResult);
        }
        function postDataRoleBooking(listData){
            // console.log(listData);
            $.ajax({
                headers: {
                    'Content-Type':'application/json'
                },
                url: host + "/api/updateBookingStt",
                type: "POST",
                data: JSON.stringify(listData)
            })
            .then(()=>{
                location.reload()
            })
            .fail((e)=>{
                console.log(e);
            })
            
        }
    </script>

    <!-- update data -->
    <script>
        //auto fill data vao modal update
        function updateDataRow(row){
            let id = $(row).attr("id");
            let rankRow = $(`#${id} .tbody-stt`).text();
            $("#idSystem").text(id);
            $("#updateRow .modal-title").text(`UPDATE ROW ${rankRow}`);
            $.ajax({
                url: host + `/api/importer?id=${id}`,
                dataType: "JSON",
            })
            .then(result=>{
                let vendor = result[0]["vendor"];
                let splitVendor = result[0]["vendor"].split("NHAP KHAU")[1].split("(")[1].split(")")[0];
                result[0]["vendor"] = splitVendor
                $("#table-update .input-cont-category").val(result[0]["cont_category"]);
                $("#table-update .input-container-number").val(result[0]["cont_number"]);
                $("#table-update .input-bill").val(result[0]["bill"]);
                $("#table-update .input-vendor").val(result[0]["vendor"]);
                $("#table-update .input-direct-carrier").val(result[0]["direct_carrier"]);
                $("#table-update .input-invoice").val(result[0]["invoice"]);
                $("#table-update .input-po").val(result[0]["po"]);
                $("#table-update .input-booking-date").val(convertValDatetime(result[0]["booking_date"]));
                $("#table-update .input-picked-at-port").val(result[0]["picked_at_port"]);
                $("#table-update .input-picked-at-port-day").val(convertValDatetime(result[0]["picked_date"]));
                $("#table-update .input-vendor-cargo-ready-day").val(convertValDatetime(result[0]["vendor_cargo_ready_date"]));
                $("#table-update .input-ata-vn-port").val(convertValDatetime(result[0]["ata_vn_port"]));
                $("#table-update .input-oil-price").val(result[0]["oil_price"]);
                $("#table-update .input-ata-pb").val(convertValDatetime(result[0]["ata_pb"]));
                $("#table-update .input-return-at-port-day").val(convertValDatetime(result[0]["return_at_port_day"]));
                $("#table-update .input-note").val(result[0]["note"]);

                let valPickedAtPort = $("#table-update .input-picked-at-port").val();
                $("#table-update .select-picked-at-port").val(valPickedAtPort);
                $("#table-update .select-picked-at-port").select2();

                let valCarrier = $("#table-update .input-direct-carrier").val();
                $("#table-update .select-direct-carrier").val(valCarrier);
                $("#table-update .select-direct-carrier").select2();
                function convertValDatetime(datetime){
                    if(datetime){
                        let date = datetime.split("T")[0].split("-").reverse().join("/");
                        let hour = datetime.split("T")[1].split(".")[0];

                        let result = (date+ " " +hour);
                        return result;
                    }
                }
            })
            .fail(err=>{
                console.log(err);
            })
            $("#updateTrigger").click();
        }
        //update data
        function updateData(){
            let idSystem = $("#idSystem").text();
            let data = {};
            data.idSystem = idSystem;
            data.contCategory = convertNull($("#table-update .input-cont-category").val().trim());
            data.contNumber = convertNull($("#table-update .input-container-number").val().trim());
            data.bill = convertNull($("#table-update .input-bill").val().trim());
            data.vendor = convertNull($("#table-update .input-vendor").val());
            data.directCarrier = convertNull($("#table-update .input-direct-carrier").val().trim());
            data.invoice = convertNull($("#table-update .input-invoice").val().trim());
            data.po = convertNull($("#table-update .input-po").val().trim());
            // data.po = null;
            data.bookingDate = convertNull(formatDate($("#table-update .input-booking-date").val().trim()));
            data.pickedAtPort = convertNull($("#table-update .input-picked-at-port").val().trim());
            data.pickedDate = null;
            data.vendorCargo = convertNull(formatDate($("#table-update .input-vendor-cargo-ready-day").val().trim()));
            data.ataVnPort = convertNull(formatDate($("#table-update .input-ata-vn-port").val().trim()));
            data.oilPrice = $("#table-update .input-oil-price").val()||null;
            data.ataPb = convertNull(formatDate($("#table-update .input-ata-pb").val().trim()));
            data.returnPortDay = null;
            data.note = convertNull($("#table-update .input-note").val().trim());

            let errArr = [];
            let listInput = $("#table-update input");
            for(let i=0; i<listInput.length; i++){
                errArr.push($(listInput[i]).attr("class")?.split(" ")[0])
            }
            
            let arrError = {};
            let error = validate(errArr, `#table-update tbody`);

            if(error.length > 0){
                arrError["error"] = error;
            }
            let validateVendor = data.vendor.split(" ")[0]+ " " +data.vendor.split(" ")[1];
            if(data.vendor){
                if(validateVendor.replace("'","") == "NHAP KHAU"){
                    alert("Vendor không đúng định dạng");
                    return 
                }else{
                    data.vendor = `'NHAP KHAU (${data.vendor.replaceAll("'","").toUpperCase()})'`;
                }
            }
            console.log(error)

            for(let key of Object.keys(arrError)){
                for(let j=0; j < arrError[key].length; j++){
                    let clasKey = Object.keys(arrError[key][j])[0];
                    let errMessage = Object.values(arrError[key][j])[0];
                    $(`#table-update tbody .error-${clasKey}`).text(errMessage)
                }
            }
            if(Object.keys(arrError).length==0){
                $.ajax({
                headers: {
                    'Content-Type':'application/json'
                },
                url: host + "/api/importer",
                type: 'PUT',
                data: JSON.stringify(data),
                })
                .then(()=>{
                    location.reload();
                })
                .fail(()=>{
                    alert("something wrong");
                })
            }
        }
    </script>
    <!-- validate data -->
    <script>
        function validate(listInput, selectorInput){
            let arrValidate = [];
            let validate = {
                "input-cont-category":{
                    required: "This input is required"
                },
                "input-container-number":{
                    required: "This input is required"
                }, 
                "input-vendor":{
                    required: "This input is required"
                }

            };
            for(let i=0; i<listInput.length; i++){
                for(let key of Object.keys(validate)){
                    if(listInput[i]===key){
                        console.log("ketequal", key)
                        if($(selectorInput +" ."+key).val().trim()=='' && validate[key]["required"]){
                            arrValidate.push({[key]:validate[key]["required"]});
                        }
                    }
                }
            }
            let errorMessage = $(".error-message");
            for(let i=0; i<errorMessage.length; i++){
                $(errorMessage[i]).text("");
            }
            return arrValidate;
        }
    </script>

    <script>
        let pickedAtPorts = $(".select-picked-at-port");
        let inputPicked = $("#table-update .input-picked-at-port");
        
        let carirer = $(".select-direct-carrier");
        let inputCarrier = $(".input-direct-carrier");

        function initSelect(){
            //picked at port
            let pickedAtPorts = $(".select-picked-at-port");
            let inputPicked = $(".input-picked-at-port");
            for(let i=0; i<pickedAtPorts.length; i++){
            $(inputPicked[i]).css("display","none")
            $(pickedAtPorts[i]).on("change", ()=>{
                let valueSelect = $(pickedAtPorts[i]).find(":selected").val();
                $(inputPicked[i]).val(valueSelect);
            })
            }
            
            // carrier
            let carrier = $(".select-direct-carrier");
            let inputCarrier = $(".input-direct-carrier");
            for(let i=0; i<carrier.length; i++){
                $(inputCarrier[i]).css("display","none")
                $(carrier[i]).on("change", ()=>{
                    let valueSelect = $(carrier[i]).find(":selected").val();
                    $(inputCarrier[i]).val(valueSelect);
                })
            }
        }
        initSelect();

        //init data vao select option
        function initPickedAtPort(){
            $.ajax({
                url: host + "/api/picked-at-port",
                type: "GET",
                dataType: "JSON"
            })
            .done((result)=>{
                for(let i=0; i<result.length; i++){
                    arrSelectPickAtport.push(result[i]["port"])
                }
                for(let i=0; i<pickedAtPorts.length; i++){
                    $(pickedAtPorts[i]).append("<option value=' '></option>")
                    let value = $(inputPicked[i]).val();
                    
                    for(let j=0; j<result.length; j++){
                        $(pickedAtPorts[i]).append(`<option value="${result[j]["port"]}" ${value==result[j]["port"]?"selected":""}>${result[j]["port"]}</option>`);
                    }
                }
                let selectList = $("select");
                for(let i=0; i<selectList.length; i++){
                    $(selectList[i]).select2();
                }
            })
            .fail((err)=>{
                console.log(err);
            })
        }

        function initCarrier(){
            $.ajax({
                url: host + "/api/carrier",
                type: "GET",
                dataType: "JSON"
            })
            .done((result)=>{
                for(let i=0; i<result.length; i++){
                    arrSelectCarrier.push(result[i]["port"])
                }
                for(let i=0; i<carirer.length; i++){
                    $(carirer[i]).append("<option value=' '></option>")
                    let value = $(inputCarrier[i]).val();
                    
                    for(let j=0; j<result.length; j++){
                        $(carirer[i]).append(`<option value="${result[j]["port"]}" ${value==result[j]["port"]?"selected":""}>${result[j]["port"]}</option>`);
                    }
                }
            })
            .fail((err)=>{
                console.log(err);
            })
        }
        initPickedAtPort();
        initCarrier();
    </script>
</body>
</html>